digraph finite_state_machine {
    rankdir=LR;
    size="8,5"
    edge [fontname = "Latin Modern"];
    q0 [shape = circle, fontsize=12]
    node [shape = circle, fontsize=12, style=filled, fillcolor=aquamarine];
    
    c1 [shape = circle, fontsize=12, fillcolor="green", style = filled];
    n1 [shape = circle, fontsize=12, fillcolor="blue",fontcolor = white, style = filled];

    n4 [shape = circle, fontsize=12, fillcolor="blue",fontcolor = white, style = filled];
    n7 [shape = circle, fontsize=12, fillcolor="blue",fontcolor = white, style = filled];

    i1 [shape = circle, fontsize=12, fillcolor="black", fontcolor = white, style = filled];
    i2 [shape = doublecircle, label = "",fillcolor="black", fontcolor = white, style = filled];
    
    ch1 [shape = circle, fontsize=12, fillcolor="pink", fontcolor = black, style = filled];

    s1 [shape = circle, fontsize=12, fontcolor = black, fillcolor="firebrick2", style = filled];
    s3 [shape = circle, fontsize=12, fontcolor = black, fillcolor="firebrick2", style = filled];

    q1 [shape = doublecircle, label = "", fillcolor=darkorange, style=filled];
    q0->q1 [label=", : {} []"];
    
    q0->c1 [label="/"];
    //c->q3 [label="/ *"]

    q0->q4 [label="."];
    q0->n1 [label="{1-9}"]
    q0->n7 [label="0"]

    q0->i1 [label="{a-z}∪_ \\ {u,U,l,L,R}", fontsize = 8]
    q0->q2 [label="u"]
    q0->q3 [label="U L l"]
    q0->q5 [label="R"]


    q2->q8 [label="8"]
    q2->i2 [label="\\Ti"]
    q2->i1 [label="C \\ {8,\\Ti}"]

    q3->ch1 [label="\'"]
    q3->s1 [label="\""]
    q3->i2 [label="\\Ti"]
    q3->i1 [label="C \\ {\',\",\\Ti}"]

    q5->s3 [label="\""]
    q5->i2 [label="\\Ti"]
    q5->i1 [label="C \\ {\", \\Ti}"]

    q8->ch1 [label="\'"]
    q8->s1 [label="\""]
    q8->i2 [label="\\Ti"]
    q8->i1 [label="C \\ {\',\", \\Ti}"]


    q4->n4 [label="{0-9}"]
    q4->q1 [label="C \\ {0-9}"]
    // char literal
    node [shape = circle, fontsize=12, fontcolor = black, fillcolor="pink", style = filled];
    ch3 [shape = doublecircle, label = ""];
    cherr [shape = doubleoctagon, label = ""];
    
    ch1->ch1 [label="C \\ ({\', \\}∪\\Tc)"]
    ch1->ch2 [label="\\"]
    ch1->ch3 [label="\'"]
    ch1->cherr [label="\\Tc"]
    ch2->ch1 [label="C \\ {\\Tc}"]
    ch2->cherr [label="\\Tc"]
    
    // string literal
    node [shape = circle, fontsize=12, fontcolor = black, fillcolor="firebrick2", style = filled];
    send [shape = doublecircle, label = ""];
    serr [shape = doubleoctagon, label = ""];
    
    s1->s1 [label="C \\ {\", \\}"]
    s1->s2 [label="\\"]
    s1->send [label="\""]
    s1->serr [label="\\Ts"]
    s2->s1 [label="C \\ {\\Ts}"]
    s2->serr [label="\\Ts"]

    s3->s4 [label="delim"]
    s3->serr [label = "else"]
    s4->s5 [label="("]
    s4->serr [label = "else"]
    s5->s5 [label="C \\ {)}"]
    s5->serr [label = "else"]
    s5->s6 [label=")"]
    
    s6->s5 [label="not delim"]
    s6->serr [label = "else"]
    s6->s7 [label="delim"]
    s7->serr [label = "else"]
    s7->send [label="\""]
    // identifiers
    node [shape = circle, fontsize=12, fontcolor = white, fillcolor="black", style = filled];
    i1->i1 [label="{0-9}∪{a-z}∪_", fontsize = 10];
    i1->i2 [label="\\Ti"]
    
    // comments
    node [shape = circle, fontsize=12, fillcolor="green",fontcolor = black, style = filled];

    c1->c2 [label="/"];
    c2->c2 [label="C \\ {\\n}", fontsize=10];
    c3 [shape = doublecircle, label = ""];
    cerr [shape = doubleoctagon, label = ""];

    c2->c3 [label="\\n"];

    c1->c4 [label="*"];

    c4->c4 [label="C \\ {*}",fontsize=10]
    c4->cerr [label="EOF", fontsize=10]
    c4->c5 [label="*"]
    c5->c4 [label="C \\ {/}",fontsize=10]
    c5->cerr [label="EOF", fontsize=10]

    // c6 [shape = doublecircle, label = ""];
    c5->c3 [label="/"]


    // numbers
    node [shape = circle, fontsize=12, fillcolor="blue",fontcolor = white, style = filled];
    nend [shape=doublecircle, label=""]
    nerr [shape = doubleoctagon, label = ""];

    n1->n1 [label="{0-9}"]
    n1->n2 [label="l L"]
    n1->nerr [label="else"]

    n1->nU [label="u U"]
    nU->n2 [label="l L"]
    nU->nerr [label="else"]
    
    n2->nL [label="{l,L}", fontsize=8]
    n2->nend [label="\\Tn"]
    n2->nerr [label="else"]

    nL->nend [label="{\\Tn,l,L,u,U}", fontsize=8]
    nL->nerr [label="else"]

    n1->n3 [label="."]
    n3->n4 [label="0-9"]
    n3->n5 [label="Ee"]
    n3->nend [label="\\Tn"]
    n3->nerr[label="else"]

    n4->n4 [label="0-9"]
    n4->n5 [label="Ee"]
    n4->nend [label="\\Tn"]
    n4->nerr[label="else"]
    
    n5->n6 [label="{+,-,0-9}"]
    n5->nerr[label="else"]

    n6->n6 [label="0-9"]
    n6->nerr[label="else"]
    // nend1 [shape=doublecircle, label=""]

    n6->nend [label="{\\Tn,f,F,l,L}"]

    // nend2 [shape=doublecircle, label=""]

    n7->n12 [label="b, B"]
    n7->nerr[label="else"]
    n12->n12 [label="0-1"]
    n12->nend [label="\\Tn"]
    n12->nerr[label="else"]
    
    n7->n3 [label="."]
    n7->nend [label="\\Tn"]
    n7->n8 [label="0-7"]
    n7->nX [label="xX"]

    n8->n8 [label="0-7"]
    n8->nend [label="\\Tn"]
    n8->nerr[label="else"]

    nX->n9 [label="0-F"]
    nX->nerr[label="else"]

    n9->nend [label="\\Tn"]
    n9->n9 [label="0-F"]
    n9->n5 [label="p P"]
    n9->n10 [label="."]
    n9->nerr[label="else"]

    n10->n5 [label="p P"]
    n10->n10 [label="0-F"]
    n10->nend [label="\\Tn"]
    n10->nerr[label="else"]
    
    // operators

}
